import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sbn
#Loading the dataset
exams_data = pd.read_csv("C:\Users\verti\Downloads\archive\exams.csv")
#Checking top 10 records of Dataset..
exams_data.head(10)
#Basic Information regarding data
exams_data.info()
#Data points count value for each class labels..
exams_data.Species.value_counts()
#Visualizing the dataset features to find pattern to solve our task
plt.scatter(exams_data['SepalLengthCm'],exams_data['SepalWidthCm'])
plt.show()
# Building Classification Model
#Imporing few library for create Decision tree classifier and visualizing the tree structure'''
from sklearn import tree
import graphviz
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split, cross_val_score
#separating dependent and independent variables
feature_columns = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm','PetalWidthCm']
X = exams_data[feature_columns].values
y = exams_data['Species'].values
#Data Splitting
Xtrain, Xtest, Ytrain, Ytest = train_test_split(X, y, test_size=0.30, random_state=42)
#spliting data into validation train and validation test
Xt, Xcv, Yt, Ycv = train_test_split(Xtrain, Ytrain, test_size=0.10, random_state=42)
#Creating the decsion tree
exams_clf = DecisionTreeClassifier(criterion='gini',min_samples_split=2)
exams_clf.fit(Xt, Yt)
#Visualized the Tree which is formed on train dataset
tree.plot_tree(exams_clf)
#Visualizing Decision Tree using graphviz library
#dot_data = tree.export_graphviz(Iris_clf, out_file=None)
#graph = graphviz.Source(dot_data)
#graph
#Accuracy
print('Accuracy score is:',cross_val_score(exams_clf, Xt, Yt, cv=3, scoring='accuracy').mean())
#Checking validation test data on our trained model and getting performance metrices
from sklearn.metrics import multilabel_confusion_matrix, accuracy_score
Y_hat = Iris_clf.predict(Xcv)
print('Accuracy score for validation test data is:',accuracy_score(Ycv, Y_hat))
multilabel_confusion_matrix(Ycv , Y_hat)
#Training model on Actual train data... '''
exams_Fclf = DecisionTreeClassifier(criterion='gini',min_samples_split=2)
exams.fit(Xtrain, Ytrain)
#Visualize tree structure..
tree.plot_tree(exams_Fclf)
#Final Decision tree build for deploying in real world cases....
#dot_data = tree.export_graphviz(exams_Fclf, out_file=None)
#graph = graphviz.Source(dot_data)
#graph
#Checking the performance of model on Actual Test data...
YT_Fhat = exams_Fclf.predict(Xtest)
YT_Fhat
print('Model Accuracy Score on totally unseen data(Xtest) is:',accuracy_score(Ytest, YT_Fhat)*100,'%')
multilabel_confusion_matrix(Ytest , YT_Fhat)
#Testing for New points except from Dataset
#Test_point = [[5.4,3.0,4.5,1.5],
             #[6.5,2.8,4.6,1.5],
             #[5.1,2.5,3.0,1.1,-0.5,1.4],
             #[5.1,3.3,1.7,0.5,1.6,2.8]]
#print(Iris_Fclf.predict(Test_point))
